name: Deploy Flask App

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v3

    - name: Login no Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build imagem
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app .

    - name: Push imagem
      run: docker push ${{ secrets.DOCKER_USERNAME }}/todo-app

  sonar-analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: SSH no servidor
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 201.23.3.86
        username: aluno
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker run -d --name sonar -p 9000:9000 sonarqube
          sleep 30
          docker exec sonar sonar-scanner \
            -Dsonar.projectKey=todo-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin -Dsonar.password=admin
          RESULT=$(curl -s http://localhost:9000/api/qualitygates/project_status?projectKey=todo-app | grep ERROR)
          docker rm -f sonar
          if [ "$RESULT" != "" ]; then exit 1; fi

  deploy:
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
    - name: Deploy remoto
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 201.23.3.86
        username: aluno
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker stop todo-app || true
          docker rm todo-app || true
          docker pull ${{ secrets.DOCKER_USERNAME }}/todo-app
          docker run -d --name todo-app -p 8104:5000 ${{ secrets.DOCKER_USERNAME }}/todo-app
